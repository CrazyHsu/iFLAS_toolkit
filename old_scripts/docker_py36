curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
apt-cache policy docker-ce
sudo apt-get install -y docker-ce
sudo groupadd docker
sudo usermod -aG docker ${USER}

docker pull ubuntu:16.04

# start docker
docker run -it ubuntu:16.04 /bin/bash

sed -i s@/archive.ubuntu.com/@/mirrors.tuna.tsinghua.edu.cn/@g /etc/apt/sources.list
apt-get clean && apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
	cmake \
	git \
	wget \
	apt-transport-https \
	libz-dev \
	ca-certificates \
	vim \
	less \
	sudo \
	apt-utils
#	build-essential python3-dev gcc \

#wget --no-check-certificate https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3.sh
wget --no-check-certificate https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda2-latest-Linux-x86_64.sh -O ~/miniconda2.sh

mkdir software
#/bin/bash ~/miniconda3.sh -b -p software/conda
/bin/bash ~/miniconda2.sh -b -p software/conda
echo -e "export PATH=/software/conda/bin:/software:$PATH" >> ~/.bashrc
source ~/.bashrc
conda init

conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ && \
	conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ && \
	conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ && \
	conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ && \
	conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/

conda update --all -y
#conda create -y -n iFLAS_test_py36 python=3.6
conda create -y -n iFLAS_test_py27 python=2.7

#conda activate iFLAS_test_py36
conda activate iFLAS_test_py27
mkdir ~/.pip
echo -e "[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple" > ~/.pip/pip.conf

conda install -y -c conda-forge r=3.6 perl
conda install -y -c bioconda perl-bioperl perl-app-cpanminus perl-dbi blast subread samtools=1.9 stringtie minimap2 seqkit hisat2 mash bedtools
conda install -y -c bioconda ucsc-bedtogenepred ucsc-gtftogenepred ucsc-genepredtogtf
conda install -y -c bioconda isoseq3=3.3 pbccs=4.2 lima pbcoretools rmats=4.0.2
conda install -y -c bioconda bioconductor-deseq2 bioconductor-ebseq
conda install -y -c bcbio bx-python
conda install -y r-reshape r-rpart r-rpart.plot r-rocr r-caret r-optparse r-lattice \
                 r-e1071 r-randomforest r-partykit r-ipred r-domc r-nnet r-rose r-proc \
                 r-mlmetrics r-pheatmap r-emt r-stringi=1.4.6

#conda install -y r-ggplot2 r-scales r-reshape r-gridextra r-rpart r-rocr r-caret r-optparse r-lattice \
#                    r-foreach r-e1071 r-randomforest r-partykit r-ipred r-rpart.plot r-domc r-nnet r-rose r-proc \
#                     r-mlmetrics r-pheatmap r-emt r-stringi=1.4.6
pip install pandas matplotlib==2.2.3 scikit-image==0.14.3 scikit-learn psutil pulp networkx==2.2 PyWavelets==1.0.3
pip install biopython==1.76 pybedtools parasail PyVCF
R -e "install.packages('tidyr', repos='https://mirrors.tuna.tsinghua.edu.cn/CRAN/')"
R -e "install.packages('valr', repos='https://mirrors.tuna.tsinghua.edu.cn/CRAN/')"


git clone https://github.com/Magdoll/cDNA_Cupcake.git /software/cDNA_Cupcake && \
    cd /software/cDNA_Cupcake && git checkout Py2_v8.7.x && \
    python setup.py build && python setup.py install

cpanm Log::Log4perl File::Which && \
	git clone https://github.com/BioInf-Wuerzburg/proovread.git /software/proovread && \
	make -C /software/proovread
echo -e "PATH=/software/proovread/bin:$PATH" >> ~/.bashrc

git clone https://github.com/CrazyHsu/SQANTI.git /software/sqanti && \
	chmod +x /software/sqanti/sqanti_qc.py
echo -e "PATH=/software/sqanti:$PATH" >> ~/.bashrc

wget --no-check-certificate https://sourceforge.net/projects/pyml/files/PyML-0.7.14.tar.gz -O /software/PyML-0.7.14.tar.gz && \
	tar -xf /software/PyML-0.7.14.tar.gz -C /software && rm -rf /software/PyML-0.7.14.tar.gz
cd /software/PyML-0.7.14
python setup.py build && python setup.py install

wget --no-check-certificate https://sourceforge.net/projects/splicegrapher/files/SpliceGrapher-0.2.7.tgz -O /software/SpliceGrapher-0.2.7.tgz && \
	tar -xf /software/SpliceGrapher-0.2.7.tgz -C /software && rm -rf /software/SpliceGrapher-0.2.7.tgz
cd /software/SpliceGrapher-0.2.7
python setup.py build && python setup.py install

git clone https://github.com/CrazyHsu/Cogent.git /software/Cogent && \
cd /software/Cogent && git checkout Py2.7_4.0.x && git submodule update --init --recursive && \
cd Complete-Striped-Smith-Waterman-Library/src && make && \
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/software/Cogent/Complete-Striped-Smith-Waterman-Library/src && \
export PYTHONPATH=$PYTHONPATH:/software/Cogent/Complete-Striped-Smith-Waterman-Library/src && \
cd ../../ && python setup.py build && python setup.py install

